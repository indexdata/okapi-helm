{{- $fullName := include "okapi.fullname" . -}}
{{- if .Values.clustered.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "okapi.fullname" . }}
  labels:
{{ include "okapi.labels" . | indent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  serviceName: {{ .Values.service.name }}
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  selector:
    matchLabels:
{{- include "okapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        type: {{ .Values.labels.type }}
        env: {{ .Values.labels.env }}
        {{- include "okapi.selectorLabels" . | nindent 8 }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.imageSecretName }}
      imagePullSecrets:
      - name: {{ .Values.imageSecretName }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      serviceAccountName: {{ include "okapi.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - {{ .Values.mode }}
            - "-conf"
            - /etc/okapi-config.json
            - "-hazelcast-config-file"
            - /etc/hazelcast.xml
            - "-cluster-host"
            - $(POD_IP)
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.name
            - name: JAVA_OPTIONS
              value: "-Djava.awt.headless=true -Dlog4j.configurationFile=/etc/log4j2.xml -Dhost=$(POD_IP) -Dnodename=$(POD_NAME) -Dhazelcast.logging.type=log4j -Dhazelcast.shutdownhook.policy=GRACEFUL -Dhazelcast.graceful.shutdown.max.wait=300 -Dlog4j2.formatMsgNoLookups=true"
            {{- range $key, $value := .Values.config }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.service.second_port.enabled }}
            - name: shttp
              containerPort: {{ .Values.service.second_port.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.service.third_port.enabled }}
            - name: thttp
              containerPort: {{ .Values.service.third_port.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          {{- end }}
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.probes.startup.path }}
              port: {{ .Values.service.port }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.lifecycle }}
          lifecycle:
            {{- toYaml .Values.lifecycle | trim | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: "hazelcast"
            mountPath: "/etc/hazelcast.xml"
            subPath: "hazelcast.xml"
          - name: "log4j2-xml"
            readOnly: true
            mountPath: "/etc/log4j2.xml"
            subPath: "log4j2.xml"
          - name: "okapi-config"
            mountPath: "/etc/okapi-config.json"
            subPath: "okapi-config.json"
      volumes:
        - name: "hazelcast"
          configMap:
            name: "hazelcast"
        - name: "log4j2-xml"
          configMap:
            name: okapi-log4j2-xml
        - name: "okapi-config"
          secret:
            secretName: {{ include "okapi.fullname" . }}
            defaultMode: 420
      topologySpreadConstraints:
      - maxSkew: {{ .Values.topologySpreadConstraints.maxSkew }}
        topologyKey: {{ .Values.topologySpreadConstraints.topologyKey }}
        whenUnsatisfiable: {{ .Values.topologySpreadConstraints.whenUnsatisfiable }}
        labelSelector:
          matchLabels:
       {{- include "okapi.selectorLabels" . | nindent 12 }}

      {{- if .Values.nodeSelector }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      {{- end }}

      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
{{- end }}
{{- end }}

