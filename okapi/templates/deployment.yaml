{{- $fullName := include "okapi.fullname" . -}}
{{- if and ( eq .Values.clustered.enabled "yes") (.Values.clustered.disabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "okapi.fullname" . }}
  labels:
    {{- include "okapi.labels" . | nindent 4 }}
  namespace: {{ .Values.namespace.name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  serviceName: {{ .Values.service.name }} ##create this
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  selector:
    matchLabels:
      {{- include "okapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "okapi.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
      - name: {{ .Values.imageSecretName }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      serviceAccountName: {{ include "okapi.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - cluster
            - "-conf"
            - /etc/okapi-config.json
            - "-hazelcast-config-file"
            - /etc/hazelcast.xml
            - "-cluster-host"
            - $(POD_IP)
          {{- if .Values.fuse.enabled }}
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_ADMIN
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.service.second_port.enabled }}
            - name: shttp
              containerPort: {{ .Values.service.second_port.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.service.third_port.enabled }}
            - name: thttp
              containerPort: {{ .Values.service.third_port.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          {{- end }}
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.probes.startup.path }}
              port: {{ .Values.service.port }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.lifecycle }}
          lifecycle:
            {{- toYaml .Values.lifecycle | trim | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: "hazelcast"
            mountPath: "/etc/hazelcast.xml"
            subPath: "hazelcast.xml"
          - name: "log4j2-xml"
            readOnly: true
            mountPath: "/etc/log4j2.xml"
            subPath: "log4j2.xml"
          - name: "okapi-config"
            mountPath: "/etc/okapi-config.json"
            subPath: "okapi-config.json"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
           - name: POD_NAME
             valueFrom:
               fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.name
           - name: JAVA_OPTIONS
             value: "-Djava.awt.headless=true -Dlog4j.configurationFile=/etc/log4j2.xml -Dhost=$(POD_IP) -Dnodename=$(POD_NAME) -Dhazelcast.logging.type=log4j -Dhazelcast.shutdownhook.policy=GRACEFUL -Dhazelcast.graceful.shutdown.max.wait=300 -Dlog4j2.formatMsgNoLookups=true"
            {{- range $key, $value := .Values.config }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.secret.secret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: {{ $key }}
      volumes:
      - name: "hazelcast"
        configMap:
          name: "hazelcast"
      - name: "log4j2-xml"
        configMap:
          name: okapi-log4j2-xml
      - name: "okapi-config"
        secret:
          secretName: okapi-config-secret
          defaultMode: 420
            {{- end }}
      {{- if .Values.nodeSelector }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      {{- end }}

      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
{{- end }}
{{- end }}
{{- end }}